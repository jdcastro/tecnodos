{% extends "base.j2" %}

{% set dashboard = true %}

{% block content %}
<div class="max-w-3xl">
  <h1 class="text-2xl font-semibold text-gray-900 dark:text-white mb-2">Subir desde tu equipo</h1>
  <p class="text-sm text-gray-500 dark:text-gray-300 mb-6">Formatos permitidos: .tiff, .png, .jpg, .jpeg.</p>

  <form method="post" enctype="multipart/form-data" class="rounded-lg border border-dashed border-gray-300 dark:border-gray-700 p-6 bg-white dark:bg-gray-900">
    <div class="mb-4">
      <label for="media_files" class="block text-sm font-medium text-gray-700 dark:text-gray-200 mb-1">Selecciona archivo</label>
      <input id="media_files" name="media_files" type="file" accept=".tiff,.tif,.png,.jpg,.jpeg" class="block w-full text-sm text-gray-900 dark:text-gray-100 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 dark:file:bg-blue-900 dark:file:text-blue-100">
    </div>

    <div class="flex items-center gap-2">
      <button id="btn-upload" type="submit" class="inline-flex items-center px-4 py-2 text-sm font-medium rounded-md bg-blue-600 text-white hover:bg-blue-700">Subir archivo</button>
      <a href="{{ url_for('media.library') }}" class="inline-flex items-center px-4 py-2 text-sm font-medium rounded-md border border-gray-300 dark:border-gray-700 text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-900">Volver a la biblioteca</a>
    </div>
  </form>

  <div class="mt-6 text-sm text-gray-500 dark:text-gray-300">
    Al subir, se guarda localmente y se registra en la base de datos.
  </div>

  <div id="upload-msg" class="mt-4 text-sm"></div>
</div>
{% endblock %}

{% block extra_js %}
<script>
function getCookie(name) {
  const value = `; ${document.cookie}`;
  const parts = value.split(`; ${name}=`);
  if (parts.length === 2) return parts.pop().split(';').shift();
}

document.addEventListener('DOMContentLoaded', () => {
  const form = document.querySelector('form[enctype="multipart/form-data"]');
  const input = document.getElementById('media_files');
  const msg = document.getElementById('upload-msg');
  const btn = document.getElementById('btn-upload');
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    msg.textContent = '';
    const file = input.files && input.files[0];
    if (!file) { msg.textContent = 'Selecciona un archivo.'; return; }
    btn.disabled = true; btn.classList.add('opacity-60', 'cursor-not-allowed');
    try {
      const fd = new FormData();
      fd.append('file', file, file.name);
      const csrf = getCookie('csrf_access_token');
      const res = await fetch('{{ url_for('media_api.upload_local_api') }}', {
        method: 'POST',
        credentials: 'include',
        headers: { 'X-CSRF-TOKEN': csrf || '' },
        body: fd,
      });
      const data = await res.json().catch(() => ({}));
      if (res.ok) {
        msg.className = 'mt-4 text-sm text-green-700';
        msg.textContent = 'Subida exitosa';
        input.value = '';
      } else {
        msg.className = 'mt-4 text-sm text-red-700';
        msg.textContent = data.message || 'Error al subir el archivo';
      }
    } catch (err) {
      msg.className = 'mt-4 text-sm text-red-700';
      msg.textContent = 'Error de red al subir.';
    } finally {
      btn.disabled = false; btn.classList.remove('opacity-60', 'cursor-not-allowed');
    }
  });
});
</script>
{% endblock %}
